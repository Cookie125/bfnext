#! /bin/bash

DCS_PORT0=10308
DCS_PORT1=10309
DCS_PORT2=10310
DCS_PORT3=10311
SRS_PORT0=5002
SRS_PORT1=5003
PATH=/sbin:${PATH}

function start() {
    # DCS Server
    iptables -A INPUT -p tcp --dport $DCS_PORT0 -j ACCEPT
    iptables -A INPUT -p udp --dport $DCS_PORT0 -j ACCEPT
    iptables -A INPUT -p tcp --dport $DCS_PORT1 -j ACCEPT
    iptables -A INPUT -p udp --dport $DCS_PORT1 -j ACCEPT
    iptables -A INPUT -p tcp --dport $DCS_PORT2 -j ACCEPT
    iptables -A INPUT -p udp --dport $DCS_PORT2 -j ACCEPT
    iptables -A INPUT -p tcp --dport $DCS_PORT3 -j ACCEPT
    iptables -A INPUT -p udp --dport $DCS_PORT3 -j ACCEPT

    # SRS Server
    iptables -A INPUT -p tcp --dport $SRS_PORT0 -j ACCEPT
    iptables -A INPUT -p udp --dport $SRS_PORT0 -j ACCEPT
    iptables -A INPUT -p tcp --dport $SRS_PORT1 -j ACCEPT
    iptables -A INPUT -p udp --dport $SRS_PORT1 -j ACCEPT

    # accept packets related to existing connections
    iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

    # SSH
    iptables -A INPUT -p tcp --dport 22 -j ACCEPT

    # accept pings, up to a point
    iptables -A INPUT -m limit --limit 5/second -p icmp --icmp-type 8 -m conntrack --ctstate NEW -j ACCEPT

    # drop packets with invalid connection states
    iptables -A INPUT -m conntrack --ctstate INVALID -j DROP

    # be polite to tcp connections up to a point
    iptables -A INPUT -p tcp -m limit --limit 10/second -j LOG --log-prefix "rejecting-with-tcp-rst "
    iptables -A INPUT -p tcp -m limit --limit 10/second -j REJECT --reject-with tcp-reset

    # be polite to udp connections up to a point
    iptables -A INPUT -p udp -m limit --limit 10/second -j LOG --log-prefix "rejecting-with-icmp-un "
    iptables -A INPUT -p udp -m limit --limit 10/second -j REJECT

    # now the gloves come off
    iptables -A INPUT -m limit --limit 10/second -j LOG --log-prefix "dropping "
    iptables -A INPUT -j DROP
}

function stop() {
    iptables -F
}

if test "$1" == "start"; then
    start
elif test "$1" == "stop"; then
    stop
elif test "$1" == "restart"; then
    stop
    start
else
    echo "usage: firewall <start|stop>"
    exit 1
fi
